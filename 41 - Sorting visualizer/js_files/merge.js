async function merge(e,t,r,a){const n=r-t+1,l=a-r;let o=new Array(n),g=new Array(l);for(let r=0;r<n;r++)await waitforme(delay),e[t+r].style.background="orange",o[r]=e[t+r].style.height;for(let t=0;t<l;t++)await waitforme(delay),e[r+1+t].style.background="yellow",g[t]=e[r+1+t].style.height;await waitforme(delay);let i=0,s=0,y=t;for(;i<n&&s<l;)await waitforme(delay),parseInt(o[i])<=parseInt(g[s])?(n+l===e.length?e[y].style.background="green":e[y].style.background="lightgreen",e[y].style.height=o[i],i++,y++):(n+l===e.length?e[y].style.background="green":e[y].style.background="lightgreen",e[y].style.height=g[s],s++,y++);for(;i<n;)await waitforme(delay),n+l===e.length?e[y].style.background="green":e[y].style.background="lightgreen",e[y].style.height=o[i],i++,y++;for(;s<l;)await waitforme(delay),n+l===e.length?e[y].style.background="green":e[y].style.background="lightgreen",e[y].style.height=g[s],s++,y++}async function mergeSort(e,t,r){if(t>=r)return void console.log(`return cause just 1 elemment l=${t}, r=${r}`);const a=t+Math.floor((r-t)/2);await mergeSort(e,t,a),await mergeSort(e,a+1,r),await merge(e,t,a,r)}const mergeSortbtn=document.querySelector(".mergeSort");mergeSortbtn.addEventListener("click",(async function(){let e=document.querySelectorAll(".bar"),t=parseInt(e.length)-1;disableSortingBtn(),disableSizeSlider(),disableNewArrayBtn(),await mergeSort(e,0,t),enableSortingBtn(),enableSizeSlider(),enableNewArrayBtn()}));